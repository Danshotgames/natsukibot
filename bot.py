import discord
from discord.ext import commands, tasks
import asyncio
import random
import os
import datetime
from discord import Webhook, RequestsWebhookAdapter
from random import randint
import sys
import traceback
from discord.ext.commands import Bot

client = discord.Client()

client = commands.Bot( command_prefix = '//' )

client.remove_command('help')

@client.command()
async def rct(ctx,id:int,reaction:str):
    await ctx.message.delete()
    message = await ctx.message.channel.fetch_message(id)
    await message.add_reaction(reaction)

@client.event
async def on_raw_reaction_add(payload):
    
    if payload.message_id == 704322752974291004: # ID –°–æ–æ–±—â–µ–Ω–∏—è
        guild = client.get_guild(payload.guild_id)
        role = None
        role2 = None
        role3 = None
        role4 = None
        channel = client.get_channel(payload.channel_id)
        message = await channel.fetch_message(payload.message_id)

        if str(payload.emoji) == 'üòÑ': # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role = guild.get_role(704324146569412679)
        
        if str(payload.emoji) == 'üòê': # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role2 = guild.get_role(704324310143336468)  
        
        if str(payload.emoji) == 'üòî': # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role3 = guild.get_role(704324450824486972) 
        
        if str(payload.emoji) == 'üò°': # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role4 = guild.get_role(704324571188428840) 

        if role2:
            member = guild.get_member(payload.user_id)
            if member:
                if(len([i for i in member.roles if i.id not in config.EXCROLES]) <= config.MAX_ROLES_PER_USER):
                    await member.add_roles(role2)
                    print('[SUCCESS] User {0.display_name} has been granted with role {1.name}'.format(member, role))
                else:
                    await message.remove_reaction(payload.emoji, member)
                    print('[ERROR] Too many roles for user {0.display_name}'.format(member))

        if role:
            member = guild.get_member(payload.user_id)
            if member:
                if(len([i for i in member.roles if i.id not in config.EXCROLES]) <= config.MAX_ROLES_PER_USER):
                    await member.add_roles(role)
                    print('[SUCCESS] User {0.display_name} has been granted with role {1.name}'.format(member, role))
                else:
                    await message.remove_reaction(payload.emoji, member)
                    print('[ERROR] Too many roles for user {0.display_name}'.format(member))
        if role3:
            member = guild.get_member(payload.user_id)
            if member:
                if(len([i for i in member.roles if i.id not in config.EXCROLES]) <= config.MAX_ROLES_PER_USER):
                    await member.add_roles(role3)
                    print('[SUCCESS] User {0.display_name} has been granted with role {1.name}'.format(member, role))
                else:
                    await message.remove_reaction(payload.emoji, member)
                    print('[ERROR] Too many roles for user {0.display_name}'.format(member))
        if role4:
            member = guild.get_member(payload.user_id)
            if member:
                if(len([i for i in member.roles if i.id not in config.EXCROLES]) <= config.MAX_ROLES_PER_USER):
                    await member.add_roles(role4)
                    print('[SUCCESS] User {0.display_name} has been granted with role {1.name}'.format(member, role))
                else:
                    await message.remove_reaction(payload.emoji, member)
                    print('[ERROR] Too many roles for user {0.display_name}'.format(member))
    
    if payload.message_id == 704262869713158195: # ID –°–æ–æ–±—â–µ–Ω–∏—è
        guild = client.get_guild(payload.guild_id)
        role = None

        if str(payload.emoji) == '‚úÖ': # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role = guild.get_role(704206253525696533) # ID –†–æ–ª–µ–π –¥–ª—è –≤—ã–¥–∞—á–∏
            role2 = guild.get_role(704206642291540028) # ID –†–æ–ª–µ–π –¥–ª—è –≤—ã–¥–∞—á–∏
        if role2:
            member = guild.get_member(payload.user_id)
            if member:
                await member.remove_roles(role2)

        if role:
            member = guild.get_member(payload.user_id)
            if member:
                await member.add_roles(role)

@client.event
async def on_raw_reaction_remove(payload):
    if payload.message_id == 704322752974291004: # ID –°–æ–æ–±—â–µ–Ω–∏—è
        guild = client.get_guild(payload.guild_id)
        role = None
        role2 = None
        role3 = None
        role4 = None

        if str(payload.emoji) == 'üòÑ': # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role = guild.get_role(704324146569412679)
        
        if str(payload.emoji) == 'üòê': # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role2 = guild.get_role(704324310143336468)  
        
        if str(payload.emoji) == 'üòî': # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role3 = guild.get_role(704324450824486972) 
        
        if str(payload.emoji) == 'üò°': # Emoji –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            role4 = guild.get_role(704324571188428840) 

        if role2:
            member = guild.get_member(payload.user_id)
            if member:
                await member.remove_roles(role2)

        if role:
            member = guild.get_member(payload.user_id)
            if member:
                await member.remove_roles(role)
        if role3:
            member = guild.get_member(payload.user_id)
            if member:
                await member.remove_roles(role3)
        if role4:
            member = guild.get_member(payload.user_id)
            if member:
                await member.remove_roles(role4)

@client.command()
async def botinfo(ctx):

    embed = discord.Embed(title=f"{ctx.guild.name}", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ **Natsuki**.\n –ë–æ—Ç –±—ã–ª –Ω–∞–ø–∏—Å–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –∫–ª–∞–Ω–∞ AFFERs,\n –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–∞–Ω–¥–∞—Ö - //help", colour = discord.Color.purple())
    embed.add_field(name=f'**–°–æ–∑–¥–∞—Ç–µ–ª—å:**', value="_Rayyy", inline=True)  # –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
    embed.add_field(name=f'**–ü–æ–º–æ—â—å –≤ —Å–æ–∑–¥–∞–Ω–∏–∏:**', value="_Rayyy", inline=True)  # –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
    embed.add_field(name=f'**–õ–∏—Ü–µ–Ω–∑–∏—è:**', value="Sv-1G-WD-Ui", inline=True)  # –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
    embed.add_field(name=f'**–ù–∞–ø–∏—Å–∞–Ω –Ω–∞:**', value="Discord.py", inline=True)  # –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
    embed.add_field(name=f'**–í–µ—Ä—Å–∏—è:**', value="2.3", inline=True)  # –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
    embed.add_field(name=f'**–ü–∞—Ç—á:**', value="3.8.2", inline=True)  # –°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
    embed.set_thumbnail( url = "https://images-ext-2.discordapp.net/external/F-OHTcCXkzVPRbLkFChv-PbqYyC8RYx2L19dXQITEDQ/%3Fsize%3D1024/https/cdn.discordapp.com/avatars/696677196349177906/18e4922dde1f1cbdd89a8044696415fc.webp?width=475&height=475")
    embed.set_footer(text=f"¬© Copyright 2020 _Rayyy#6698 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã")  # —Å–æ–∑–¥–∞–µ–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞
    await ctx.send(embed=embed)

@client.command()
@commands.has_role("üëë VIP üëë")
async def gif(ctx, arg, *, txt = ''):
    await ctx.message.delete()
    guild = ctx.guild
    em = str(discord.utils.get(guild.emojis, name=f'{arg}'))
    w = await ctx.channel.create_webhook(name=ctx.author.name)
    await w.send(f'{txt} {em}', avatar_url=ctx.author.avatar_url)
        
    await w.delete()

#Time

@client.event
async def on_ready():
    print("Bot is ready!")
    while True:
        await client.change_presence(status = discord.Status.online, activity = discord.Game('üíõ Standoff 2 | AFF üíõ'))
        await asyncio.sleep(4)
        await client.change_presence(status = discord.Status.online, activity = discord.Game('üíú Standoff 2 | AFF üíú'))
        #await client.change_presence(status = discord.Status.online, activity = discord.Activity(type = discord.ActivityType.watching, name="–∑–∞ —Å–µ—Ä–≤–µ—Ä–æ–º | AFF "))
        await asyncio.sleep(4)
        await client.change_presence(status = discord.Status.online, activity = discord.Game('üíô Standoff 2 | AFF üíô'))
        #await client.change_presence(status = discord.Status.online, activity = discord.Activity(type = discord.ActivityType.listening, name = "–Ø —Ä–æ–±–æ—Ç –¥–æ–ª–±–∞–µ–± | AFF "))
        await asyncio.sleep(4)

@client.command(pass_context = True)
#@tasks.loop(seconds=60)
async def time(ctx):
    await ctx.channel.purge(limit=1) 
    offset = datetime.timezone(datetime.timedelta(hours=3))
    moscow_time = datetime.datetime.now(offset)
    #await client.change_presence(status=discord.Status.online, activity=discord.Game(f'{moscow_time.hour} : {moscow_time.minute}'))
    emb = discord.Embed( title = f'–í—Ä–µ–º—è –ú–°–ö: {moscow_time.hour} : {moscow_time.minute}',colour = discord.Color.purple(),url = None )
    await ctx.send(embed = emb)

#Clear
    
@client.command( pass_context = True )
@commands.has_permissions( kick_members = True )

async def clear( ctx, amount = 1000 ):
    await ctx.channel.purge(limit = amount+1)

    emb = discord.Embed( title = f'–û—á–∏—â–µ–Ω–æ: {amount} —Å–æ–æ–±—â–µ–Ω–∏–π',colour = discord.Color.purple(),url = None )
    emb.set_author( name = ctx.author.name, icon_url = ctx.author.avatar_url )
    await ctx.send(embed = emb)
    
#Help
    
@client.command( pass_context = True )

async def help( ctx ):
    await ctx.channel.purge (limit = 1)

    emb = discord.Embed( title = '–ò–ù–§–û–†–ú–ê–¶–ò–Ø', description = '–ì–ò–î –ø–æ –∫–æ–º–º–∞–Ω–¥–∞–º:',colour = discord.Color.purple(),url = None )

    emb.add_field( name ='//help', value = '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∫–æ–º–º–∞–Ω–¥–∞–º' )
    emb.add_field( name ='//clear', value = '–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞')
    
    
   
    emb.add_field( name ='//time', value = '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è')
    emb.add_field( name ='//botinfo', value = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ')
    emb.add_field( name ='//serverinfo', value = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ')
    emb.add_field( name ='//userinfo', value = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ')
    emb.add_field( name ='//suggest', value = '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é')
    emb.add_field( name ='//gif', value = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å gif-emoji –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞')
    emb.add_field( name ='//ball', value = '–ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä')
    emb.add_field( name ='//say', value = '–ì–æ–≤–æ—Ä–∏—Ç—å –±–æ—Ç–æ–º')
    emb.set_thumbnail(url=ctx.guild.icon_url)
    await ctx.send(embed = emb)
  

#Userinfo

@client.command()
async def userinfo(ctx, Member: discord.Member = None ):
    await ctx.channel.purge (limit = 1)
    if not Member:
        Member = ctx.author
    roles = (role for role in Member.roles )
    emb = discord.Embed(title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.'.format(Member.name), description=f"–£—á–∞—Å—Ç–Ω–∏–∫ –∑–∞—à—ë–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä: {Member.joined_at.strftime('%b %#d, %Y')}\n\n "
                                                                                      f"–ò–º—è: {Member.name}\n\n"
                                                                                      f"–ù–∏–∫–Ω–µ–π–º: {Member.nick}\n\n"
                                                                                      f"–°—Ç–∞—Ç—É—Å: {Member.status}\n\n"
                                                                                      f"ID: {Member.id}\n\n"
                                                                                      f"–í—ã—Å—à–∞—è —Ä–æ–ª—å: {Member.top_role}\n\n"
                                                                                      f"–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω: {Member.created_at.strftime('%b %#d, %Y')}", 
                                                                                      colour = discord.Color.purple(), timestamp=ctx.message.created_at)

    emb.set_thumbnail(url= Member.avatar_url)
    emb.set_footer(icon_url= Member.avatar_url)
    emb.set_footer(text='–ö–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞: {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
    await ctx.send(embed=emb)

#Serverinfo

@client.command()
async def serverinfo(ctx, member: discord.Member = None):
    await ctx.channel.purge (limit = 1)
    if not member:
        member = ctx.author

    guild = ctx.guild
    embed = discord.Embed(title=f"{guild.name}", description=f"–°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω: {guild.created_at.strftime('%b %#d, %Y')}\n\n"
                                                             f"–†–µ–≥–∏–æ–Ω: {guild.region}\n\n–ì–ª–∞–≤–∞ —Å–µ—Ä–≤–µ—Ä–∞: {guild.owner}\n\n"
                                                             f"–õ—é–¥–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {guild.member_count}\n\n",  colour = discord.Color.purple(),timestamp=ctx.message.created_at)

    embed.set_thumbnail(url=ctx.guild.icon_url)
    embed.set_footer(text=f"ID: {guild.id}")

    embed.set_footer(text=f"ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {ctx.author.id}")
    await ctx.send(embed=embed)

#None_commands

@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound ):
        await ctx.send(embed = discord.Embed(description = f'**{ctx.author.name}, –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.**', colour = discord.Color.red())) 

#Logs

@client.event
async def on_message_edit(before, after):
    channel = client.get_channel(703223484574334976)
    if before.author == client.user:
        return
    if before.content is None:
        return
    elif after.content is None:
        return
    message_edit = discord.Embed(colour=0xff0000,
                                 description=f"**{before.author} –ò–∑–º–µ–Ω–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ {before.channel}** "
                                             f"\n–°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {before.content}"
                                             f"\n\n–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {after.content}",timestamp=before.created_at)

    message_edit.set_author(name=f"{before.author}",icon_url=f"{before.author.avatar_url}")
    message_edit.set_footer(text=f"ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {before.author.id} | ID –°–æ–æ–±—â–µ–Ω–∏—è: {before.id}")
    await channel.send(embed=message_edit)
    return

@client.event
async def on_message_delete(message):
    channel = client.get_channel(703223484574334976)
    if message.content is None:
        return
    embed = discord.Embed(colour=0xff0000, description=f"**{message.author} –£–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ {message.channel}** \n{message.content}",timestamp=message.created_at)

    embed.set_author(name=f"{message.author}", icon_url=f'{message.author.avatar_url}')
    embed.set_footer(text=f'ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.author.id} | ID –°–æ–æ–±—â–µ–Ω–∏—è: {message.id}')
    await channel.send(embed=embed)
    return

@client.command()
@commands.has_permissions( ban_members = True)
async def say(ctx, *, arg):

    await ctx.message.delete()
    await ctx.send(embed = discord.Embed(description = f'{arg}', colour = discord.Color.purple()))

@client.command()
async def ball(ctx, *, arg):

    message = ['–ù–µ—Ç','–î–∞','–í–æ–∑–º–æ–∂–Ω–æ','–û–ø—Ä–µ–¥–ª–µ–Ω–Ω–æ –Ω–µ—Ç'] 
    s = random.choice( message )
    await ctx.send(embed = discord.Embed(description = f'**:crystal_ball: –ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç: ** {s}', colour = discord.Color.purple()))
    return

@client.command( pass_context = True)

async def suggest( ctx , * , agr ):
    await ctx.channel.purge (limit = 1)
    suggest_chanell = client.get_channel( 698168631758028840 ) #–ê–π–¥–∏ –∫–∞–Ω–∞–ª–∞ –ø—Ä–µ–¥–ª–æ–∂–∫–∏
    embed = discord.Embed(title=f"{ctx.author.name} –ü—Ä–µ–¥–ª–æ–∂–∏–ª :", description= f" {agr} \n\n")

    embed.set_thumbnail(url=ctx.guild.icon_url)

    message = await suggest_chanell.send(embed=embed)
    await message.add_reaction('‚úÖ')
    await message.add_reaction('‚ùé')

    
token = os.environ.get('TOKEN')

client.run(str(token))
  
